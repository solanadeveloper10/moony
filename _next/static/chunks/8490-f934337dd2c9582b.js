(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[8490], { 93190: function (e, t, n) { "use strict"; n.d(t, { Z: function () { return q } }); var a = n(85893), i = n(16914), s = n(24124), p = n(18618), r = n(70959), y = n(44461), u = n(84028), o = n(90889), l = n(67294), d = n(48783), m = n(22757), c = n(6089), b = n(93717), T = n(14225), f = n(41664), x = n.n(f); let g = e => { let { label: t, mobileLabel: n, buttonLabel: i, href: s } = e; return (0, a.jsxs)(b.k, { justify: "space-between", align: "center", w: "100%", h: { base: "50px", lg: "75px" }, maxW: "600px", bg: "white", borderRadius: "8px", ps: 8, children: [(0, a.jsx)(m.X, { fontSize: "17px", color: "#5A189A", display: { base: "flex", lg: "none" }, children: n }), (0, a.jsx)(m.X, { fontSize: "28px", color: "#5A189A", display: { base: "none", lg: "flex" }, children: t }), (0, a.jsx)(T.z, { w: { base: "100px", lg: "200px" }, h: "100%", color: "#fff", borderRadius: "0px 8px 8px 0px", _hover: { bg: "#5A189A" }, fontSize: { base: "15px", lg: "20px" }, bg: "#5A189A", as: x(), href: s, target: "_blank", children: i })] }) }; var h = e => (0, a.jsxs)(d.g, { spacing: { base: 2, lg: 4 }, w: "100%", ...e, children: [(0, a.jsx)(g, { label: "FOLLOW @WAGMICATGIRL", mobileLabel: "@WAGMICATGIRL", buttonLabel: "FOLLOW", href: "https://twitter.com/intent/follow?screen_name=wagmicatgirl" }), (0, a.jsx)(g, { label: "JOIN MOONY TELEGRAM", mobileLabel: "MOONY TELEGRAM", buttonLabel: "JOIN", href: "https://t.me/MoonyCatCoin" }), (0, a.jsx)(g, { label: "PLAY MOONY GAME", mobileLabel: "MOONY GAME", buttonLabel: "PLAY", href: "https://runner.wagmicatgirl.com/" })] }), A = n(69077), w = n(80803), v = n(12232), S = n(241), _ = n(82169), M = n(64146); n(89706), n(31886), n(16441), n(2593); var I = n(55678), C = n(2515); let E = (0, C.eI)("https://cnmffdpgpggereefxapf.supabase.co", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNubWZmZHBncGdnZXJlZWZ4YXBmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDEwOTQ2NDIsImV4cCI6MjAxNjY3MDY0Mn0.Ml_jJG77AnNynhd6lbHd-QbfPPxAn7mR-rP4bhb1VC0"), j = "0x42995Cf1485ed7820EB251A45f5cfC9E6E98C51a", O = "0xAC51087Db6EEd7eD2506a119a934E32b693fB67c", R = "0x9eF5AC654c7Ef0F9ddE3119da64742309224c5C6", F = [{ inputs: [{ internalType: "address", name: "_raffleNFT", type: "address" }, { internalType: "address", name: "_hood", type: "address" }], stateMutability: "nonpayable", type: "constructor" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "address", name: "previousOwner", type: "address" }, { indexed: !0, internalType: "address", name: "newOwner", type: "address" }], name: "OwnershipTransferred", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "address", name: "user", type: "address" }, { indexed: !1, internalType: "uint256", name: "hoodClaimAmount", type: "uint256" }], name: "RaffleClaimEvent", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "address", name: "user", type: "address" }, { indexed: !1, internalType: "uint256", name: "hoodClaimAmount", type: "uint256" }], name: "SaleClaimEvent", type: "event" }, { inputs: [], name: "hood", outputs: [{ internalType: "contract IERC20", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "hoodPerNFT", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isClaimActive", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "owner", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "winningRaffle", type: "uint256" }, { internalType: "uint256", name: "boughtRaffle", type: "uint256" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "raffleClaim", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "raffleClaimed", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "raffleNFT", outputs: [{ internalType: "contract IERC721A", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "hoodClaimAmount", type: "uint256" }, { internalType: "uint256", name: "claimableMoonyAmount", type: "uint256" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "saleClaim", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "saleClaimed", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bool", name: "_isClaimActive", type: "bool" }], name: "setClaimActive", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_signer", type: "address" }], name: "setSigner", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "signer", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "newOwner", type: "address" }], name: "transferOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "toAddr", type: "address" }], name: "withdrawStuckEth", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_token", type: "address" }, { internalType: "address", name: "_to", type: "address" }], name: "withdrawToken", outputs: [], stateMutability: "nonpayable", type: "function" }, { stateMutability: "payable", type: "receive" }], L = [{ inputs: [], stateMutability: "nonpayable", type: "constructor" }, { inputs: [], name: "ApprovalCallerNotOwnerNorApproved", type: "error" }, { inputs: [], name: "ApprovalQueryForNonexistentToken", type: "error" }, { inputs: [], name: "BalanceQueryForZeroAddress", type: "error" }, { inputs: [], name: "MintERC2309QuantityExceedsLimit", type: "error" }, { inputs: [], name: "MintToZeroAddress", type: "error" }, { inputs: [], name: "MintZeroQuantity", type: "error" }, { inputs: [], name: "OwnerQueryForNonexistentToken", type: "error" }, { inputs: [], name: "OwnershipNotInitializedForExtraData", type: "error" }, { inputs: [], name: "TransferCallerNotOwnerNorApproved", type: "error" }, { inputs: [], name: "TransferFromIncorrectOwner", type: "error" }, { inputs: [], name: "TransferToNonERC721ReceiverImplementer", type: "error" }, { inputs: [], name: "TransferToZeroAddress", type: "error" }, { inputs: [], name: "URIQueryForNonexistentToken", type: "error" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "address", name: "owner", type: "address" }, { indexed: !0, internalType: "address", name: "approved", type: "address" }, { indexed: !0, internalType: "uint256", name: "tokenId", type: "uint256" }], name: "Approval", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "address", name: "owner", type: "address" }, { indexed: !0, internalType: "address", name: "operator", type: "address" }, { indexed: !1, internalType: "bool", name: "approved", type: "bool" }], name: "ApprovalForAll", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "address", name: "buyer", type: "address" }, { indexed: !1, internalType: "uint256", name: "amount", type: "uint256" }], name: "BuyEvent", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "uint256", name: "fromTokenId", type: "uint256" }, { indexed: !1, internalType: "uint256", name: "toTokenId", type: "uint256" }, { indexed: !0, internalType: "address", name: "from", type: "address" }, { indexed: !0, internalType: "address", name: "to", type: "address" }], name: "ConsecutiveTransfer", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "bytes32", name: "_hashedPayload", type: "bytes32" }], name: "CreditCleared", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "bytes32", name: "_hashedPayload", type: "bytes32" }, { indexed: !1, internalType: "bytes", name: "_payload", type: "bytes" }], name: "CreditStored", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_srcChainId", type: "uint16" }, { indexed: !1, internalType: "bytes", name: "_srcAddress", type: "bytes" }, { indexed: !1, internalType: "uint64", name: "_nonce", type: "uint64" }, { indexed: !1, internalType: "bytes", name: "_payload", type: "bytes" }, { indexed: !1, internalType: "bytes", name: "_reason", type: "bytes" }], name: "MessageFailed", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "address", name: "previousOwner", type: "address" }, { indexed: !0, internalType: "address", name: "newOwner", type: "address" }], name: "OwnershipTransferred", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "uint16", name: "_srcChainId", type: "uint16" }, { indexed: !0, internalType: "bytes", name: "_srcAddress", type: "bytes" }, { indexed: !0, internalType: "address", name: "_toAddress", type: "address" }, { indexed: !1, internalType: "uint256[]", name: "_tokenIds", type: "uint256[]" }], name: "ReceiveFromChain", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_srcChainId", type: "uint16" }, { indexed: !1, internalType: "bytes", name: "_srcAddress", type: "bytes" }, { indexed: !1, internalType: "uint64", name: "_nonce", type: "uint64" }, { indexed: !1, internalType: "bytes32", name: "_payloadHash", type: "bytes32" }], name: "RetryMessageSuccess", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "uint16", name: "_dstChainId", type: "uint16" }, { indexed: !0, internalType: "address", name: "_from", type: "address" }, { indexed: !0, internalType: "bytes", name: "_toAddress", type: "bytes" }, { indexed: !1, internalType: "uint256[]", name: "_tokenIds", type: "uint256[]" }], name: "SendToChain", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_dstChainId", type: "uint16" }, { indexed: !1, internalType: "uint256", name: "_dstChainIdToBatchLimit", type: "uint256" }], name: "SetDstChainIdToBatchLimit", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_dstChainId", type: "uint16" }, { indexed: !1, internalType: "uint256", name: "_dstChainIdToTransferGas", type: "uint256" }], name: "SetDstChainIdToTransferGas", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_dstChainId", type: "uint16" }, { indexed: !1, internalType: "uint16", name: "_type", type: "uint16" }, { indexed: !1, internalType: "uint256", name: "_minDstGas", type: "uint256" }], name: "SetMinDstGas", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint256", name: "_minGasToTransferAndStore", type: "uint256" }], name: "SetMinGasToTransferAndStore", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "address", name: "precrime", type: "address" }], name: "SetPrecrime", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_remoteChainId", type: "uint16" }, { indexed: !1, internalType: "bytes", name: "_path", type: "bytes" }], name: "SetTrustedRemote", type: "event" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "uint16", name: "_remoteChainId", type: "uint16" }, { indexed: !1, internalType: "bytes", name: "_remoteAddress", type: "bytes" }], name: "SetTrustedRemoteAddress", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "address", name: "from", type: "address" }, { indexed: !0, internalType: "address", name: "to", type: "address" }, { indexed: !0, internalType: "uint256", name: "tokenId", type: "uint256" }], name: "Transfer", type: "event" }, { inputs: [], name: "DEFAULT_PAYLOAD_SIZE_LIMIT", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "FUNCTION_TYPE_SEND", outputs: [{ internalType: "uint16", name: "", type: "uint16" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "tokenId", type: "uint256" }], name: "approve", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }], name: "balanceOf", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "quantity", type: "uint256" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "buy", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }], name: "buyList", outputs: [{ internalType: "address", name: "buyer", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bytes", name: "_payload", type: "bytes" }], name: "clearCredits", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "", type: "uint16" }], name: "dstChainIdToBatchLimit", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "", type: "uint16" }], name: "dstChainIdToTransferGas", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "bytes", name: "_toAddress", type: "bytes" }, { internalType: "uint256[]", name: "_tokenIds", type: "uint256[]" }, { internalType: "bool", name: "_useZro", type: "bool" }, { internalType: "bytes", name: "_adapterParams", type: "bytes" }], name: "estimateSendBatchFee", outputs: [{ internalType: "uint256", name: "nativeFee", type: "uint256" }, { internalType: "uint256", name: "zroFee", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "bytes", name: "_toAddress", type: "bytes" }, { internalType: "uint256", name: "_tokenId", type: "uint256" }, { internalType: "bool", name: "_useZro", type: "bool" }, { internalType: "bytes", name: "_adapterParams", type: "bytes" }], name: "estimateSendFee", outputs: [{ internalType: "uint256", name: "nativeFee", type: "uint256" }, { internalType: "uint256", name: "zroFee", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "", type: "uint16" }, { internalType: "bytes", name: "", type: "bytes" }, { internalType: "uint64", name: "", type: "uint64" }], name: "failedMessages", outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], stateMutability: "view", type: "function" }, { inputs: [], name: "feeAddress", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_srcChainId", type: "uint16" }, { internalType: "bytes", name: "_srcAddress", type: "bytes" }], name: "forceResumeReceive", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }], name: "getApproved", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getBuyList", outputs: [{ components: [{ internalType: "address", name: "buyer", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct RaffleNFT.BuyInfo[]", name: "", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getBuyListLength", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_version", type: "uint16" }, { internalType: "uint16", name: "_chainId", type: "uint16" }, { internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "_configType", type: "uint256" }], name: "getConfig", outputs: [{ internalType: "bytes", name: "", type: "bytes" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_remoteChainId", type: "uint16" }], name: "getTrustedRemoteAddress", outputs: [{ internalType: "bytes", name: "", type: "bytes" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "operator", type: "address" }], name: "isApprovedForAll", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_srcChainId", type: "uint16" }, { internalType: "bytes", name: "_srcAddress", type: "bytes" }], name: "isTrustedRemote", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "lzEndpoint", outputs: [{ internalType: "contract ILayerZeroEndpoint", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_srcChainId", type: "uint16" }, { internalType: "bytes", name: "_srcAddress", type: "bytes" }, { internalType: "uint64", name: "_nonce", type: "uint64" }, { internalType: "bytes", name: "_payload", type: "bytes" }], name: "lzReceive", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "maxMint", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "", type: "uint16" }, { internalType: "uint16", name: "", type: "uint16" }], name: "minDstGasLookup", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "minGasToTransferAndStore", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "mintLimit", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "mintedAmount", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "name", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "_srcChainId", type: "uint16" }, { internalType: "bytes", name: "_srcAddress", type: "bytes" }, { internalType: "uint64", name: "_nonce", type: "uint64" }, { internalType: "bytes", name: "_payload", type: "bytes" }], name: "nonblockingLzReceive", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "", type: "uint256" }, { internalType: "bytes", name: "", type: "bytes" }], name: "onERC721Received", outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "owner", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }], name: "ownerOf", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint16", name: "", type: "uint16" }], name: "payloadSizeLimitLookup", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "precrime", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "pricePerOne", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_srcChainId", type: "uint16" }, { internalType: "bytes", name: "_srcAddress", type: "bytes" }, { internalType: "uint64", name: "_nonce", type: "uint64" }, { internalType: "bytes", name: "_payload", type: "bytes" }], name: "retryMessage", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "from", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "tokenId", type: "uint256" }], name: "safeTransferFrom", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "from", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "tokenId", type: "uint256" }, { internalType: "bytes", name: "_data", type: "bytes" }], name: "safeTransferFrom", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "_from", type: "address" }, { internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "bytes", name: "_toAddress", type: "bytes" }, { internalType: "uint256[]", name: "_tokenIds", type: "uint256[]" }, { internalType: "address payable", name: "_refundAddress", type: "address" }, { internalType: "address", name: "_zroPaymentAddress", type: "address" }, { internalType: "bytes", name: "_adapterParams", type: "bytes" }], name: "sendBatchFrom", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "_from", type: "address" }, { internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "bytes", name: "_toAddress", type: "bytes" }, { internalType: "uint256", name: "_tokenId", type: "uint256" }, { internalType: "address payable", name: "_refundAddress", type: "address" }, { internalType: "address", name: "_zroPaymentAddress", type: "address" }, { internalType: "bytes", name: "_adapterParams", type: "bytes" }], name: "sendFrom", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "operator", type: "address" }, { internalType: "bool", name: "approved", type: "bool" }], name: "setApprovalForAll", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "string", name: "_baseTokenURI", type: "string" }], name: "setBaseUri", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_version", type: "uint16" }, { internalType: "uint16", name: "_chainId", type: "uint16" }, { internalType: "uint256", name: "_configType", type: "uint256" }, { internalType: "bytes", name: "_config", type: "bytes" }], name: "setConfig", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "uint256", name: "_dstChainIdToBatchLimit", type: "uint256" }], name: "setDstChainIdToBatchLimit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "uint256", name: "_dstChainIdToTransferGas", type: "uint256" }], name: "setDstChainIdToTransferGas", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "uint16", name: "_packetType", type: "uint16" }, { internalType: "uint256", name: "_minGas", type: "uint256" }], name: "setMinDstGas", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_minGasToTransferAndStore", type: "uint256" }], name: "setMinGasToTransferAndStore", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_dstChainId", type: "uint16" }, { internalType: "uint256", name: "_size", type: "uint256" }], name: "setPayloadSizeLimit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_precrime", type: "address" }], name: "setPrecrime", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_version", type: "uint16" }], name: "setReceiveVersion", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_version", type: "uint16" }], name: "setSendVersion", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_signer", type: "address" }], name: "setSigner", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_remoteChainId", type: "uint16" }, { internalType: "bytes", name: "_path", type: "bytes" }], name: "setTrustedRemote", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "_remoteChainId", type: "uint16" }, { internalType: "bytes", name: "_remoteAddress", type: "bytes" }], name: "setTrustedRemoteAddress", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "signer", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], name: "storedCredits", outputs: [{ internalType: "uint16", name: "srcChainId", type: "uint16" }, { internalType: "address", name: "toAddress", type: "address" }, { internalType: "uint256", name: "index", type: "uint256" }, { internalType: "bool", name: "creditsRemain", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }], name: "supportsInterface", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "symbol", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }], name: "tokenURI", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" }, { inputs: [], name: "totalSupply", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "from", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "tokenId", type: "uint256" }], name: "transferFrom", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "newOwner", type: "address" }], name: "transferOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint16", name: "", type: "uint16" }], name: "trustedRemoteLookup", outputs: [{ internalType: "bytes", name: "", type: "bytes" }], stateMutability: "view", type: "function" }], N = [{ inputs: [], stateMutability: "nonpayable", type: "constructor" }, { anonymous: !1, inputs: [{ indexed: !1, internalType: "address", name: "depositor", type: "address" }, { indexed: !1, internalType: "uint256", name: "amount", type: "uint256" }], name: "DepositEvent", type: "event" }, { anonymous: !1, inputs: [{ indexed: !0, internalType: "address", name: "previousOwner", type: "address" }, { indexed: !0, internalType: "address", name: "newOwner", type: "address" }], name: "OwnershipTransferred", type: "event" }, { inputs: [], name: "deposit", outputs: [], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }], name: "depositList", outputs: [{ internalType: "address", name: "depositor", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "depositedAmount", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "feeAddress", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getDepositList", outputs: [{ components: [{ internalType: "address", name: "depositor", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct PublicSale.DepositInfo[]", name: "", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getDepositListLength", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isSaleActive", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "minDeposit", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "owner", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_minDeposit", type: "uint256" }], name: "setMinDeposit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "bool", name: "_isSaleActive", type: "bool" }], name: "setSaleActive", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "totalDepositedAmount", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "newOwner", type: "address" }], name: "transferOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }]; var D = n(48583), k = n(15103); let z = (0, k.cn)(!1); (0, i.m)("span", { baseStyle: { fontWeight: 700 } }); var P = e => { let { status: t } = e, [n, i] = (0, l.useState)(3), [s, p] = (0, l.useState)(0), [r, y] = (0, l.useState)(0), { address: u } = (0, A.mA)(); (0, w.f)("0.00045"); let [o, b] = (0, l.useState)(!1), [T, f] = (0, l.useState)(0), [x, g] = (0, l.useState)(0), [C, R] = (0, l.useState)(0), [N, k] = (0, l.useState)(0), [P, H] = (0, D.KO)(z); async function W() { if (u) { let { data: e } = await E.from("RaffleResult").select("*").eq("address", u); e.length > 0 ? (R(69e4 * e[0].winning), f(e[0].winning), g(e[0].bought)) : (R(0), f(0), g(0)) } } async function G() { try { let e = await (0, v.a4)({ address: O, abi: L, functionName: "balanceOf", args: [u] }); return p(parseInt(e.toString())), parseInt(e.toString()) } catch (e) { console.log(e) } } async function B() { try { let e = await (0, v.a4)({ address: O, abi: L, functionName: "totalSupply", args: [] }); y(parseInt(e.toString())) } catch (e) { console.log(e) } } async function X() { try { let e = await (0, v.a4)({ address: j, abi: F, functionName: "raffleClaimed", args: [u] }); return k(69e4 * parseInt(e.toString())), parseInt(e.toString()) } catch (e) { console.log(e) } } return (0, l.useEffect)(() => { if (u) { let e = function (e) { let t = localStorage.getItem(e); return t ? JSON.parse(t) : null }(u); H(null == e ? void 0 : e.hasTweeted) } }, [u]), (0, l.useEffect)(() => { B(), b(!0) }, []), (0, l.useEffect)(() => { W() }, [u]), (0, l.useEffect)(() => { let e; e = window.ethereum ? new S.Q(window.ethereum) : new _.r("https://rpc.ankr.com/eth"); let t = new M.CH(O, L, e); t.on("BuyEvent", (e, t) => { B(), G(), e = e.substring(0, 4) + "..." + e.substring(e.length - 4), (0, I.Am)("".concat(e, " just bought ").concat(t, " RaffleNFT")) }) }, []), (0, l.useEffect)(() => { u && (G(), B(), X()) }, [u]), (0, a.jsxs)(d.g, { children: [(0, a.jsx)(m.X, { fontSize: { base: "40px", lg: "62px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "NFT RAFFLE" }), (0, a.jsxs)(d.g, { borderRadius: "15px", border: "1px solid #5A189A", bg: "#fff", w: "100%", maxW: { base: "360px", lg: "460px" }, p: { base: 10, lg: 12 }, mt: { base: "40px", lg: "70px" }, spacing: { base: "30px", lg: "40px" }, children: [(0, a.jsxs)(d.g, { spacing: 3, children: [(0, a.jsx)(m.X, { fontSize: { base: "20px", lg: "28px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "NFT RAFFLE" }), (0, a.jsx)(m.X, { fontSize: { base: "32px", lg: "48px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, suppressHydrationWarning: !0, children: "ENDED" })] }), (0, a.jsx)(c.E, { src: "hood-nft-raffle.gif", alt: "NFT", boxSize: { base: "266px", lg: "340px" }, objectFit: "cover", borderRadius: "20px" })] }), (0, a.jsx)(h, { mt: { base: 12, lg: 24 } })] }) }; (0, i.m)("span", { baseStyle: { fontWeight: 700 } }); var H = n(61744), W = n(39625); (0, i.m)("span", { baseStyle: { fontWeight: 700 } }); var G = e => { let { status: t } = e, [n, i] = (0, l.useState)(2215), [s, p] = (0, l.useState)(0), [r, y] = (0, l.useState)(0), { address: u } = (0, A.mA)(), [o, b] = (0, l.useState)(0), [T, f] = (0, l.useState)(0), [x, g] = (0, D.KO)(z); async function w() { if (u) { let { data: e } = await E.from("SaleResult").select("*").eq("address", u); e.length > 0 ? b(e[0].claimable) : b(0) } } async function C() { try { let e = await (0, v.a4)({ address: R, abi: N, functionName: "totalDepositedAmount" }), t = parseFloat(parseFloat((0, W.d)(e.toString())).toFixed(2)); p(t * n) } catch (e) { console.log(e) } } async function O(e) { try { let t = await (0, v.a4)({ address: R, abi: N, functionName: "depositedAmount", args: [e] }), n = parseFloat(parseFloat((0, W.d)(t.toString())).toFixed(3)); return n } catch (e) { console.log(e) } } async function L() { if (u) { let e = await O(u); e && y(e) } } async function k() { if (u) try { let e = await (0, v.a4)({ address: j, abi: F, functionName: "saleClaimed", args: [u] }); return f(parseInt(H.dF(e.toString()))), e.toString() } catch (e) { console.log(e) } } return (0, l.useEffect)(() => { if (u) { let e = function (e) { let t = localStorage.getItem(e); return t ? JSON.parse(t) : null }(u); g(null == e ? void 0 : e.hasTweeted) } }, [u]), (0, l.useEffect)(() => { C(), L(), w(), k() }, [u]), (0, l.useEffect)(() => { C() }, []), (0, l.useEffect)(() => { let e; e = window.ethereum ? new S.Q(window.ethereum) : new _.r("https://rpc.ankr.com/eth"); let t = new M.CH(R, N, e); t.on("DepositEvent", (e, t) => { let n = parseFloat(parseFloat((0, W.d)(t.toString())).toFixed(3)); L(), C(), e = e.substring(0, 4) + "..." + e.substring(e.length - 4), (0, I.Am)("".concat(e, " just deposited ").concat(n, " ETH")) }) }, []), (0, a.jsxs)(d.g, { children: [(0, a.jsx)(m.X, { fontSize: { base: "40px", lg: "62px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "MOONY PUBLIC SALE" }), (0, a.jsxs)(d.g, { borderRadius: "15px", border: "1px solid #5A189A", bg: "#fff", w: "100%", maxW: { base: "360px", lg: "460px" }, p: { base: 10, lg: 12 }, mt: { base: "40px", lg: "70px" }, spacing: { base: "30px", lg: "40px" }, children: [(0, a.jsxs)(d.g, { spacing: 3, children: [(0, a.jsx)(m.X, { fontSize: { base: "20px", lg: "28px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "PUBLIC SALE" }), (0, a.jsx)(m.X, { fontSize: { base: "32px", lg: "48px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, suppressHydrationWarning: !0, children: "ENDED" })] }), (0, a.jsx)(c.E, { src: "hood-nft.png", alt: "NFT", boxSize: { base: "160px", lg: "250px" }, objectFit: "cover", borderRadius: "20px" })] }), (0, a.jsx)(h, { mt: { base: 12, lg: 24 } })] }) }, B = e => { let { title: t } = e; return (0, a.jsxs)(d.g, { children: [(0, a.jsx)(m.X, { fontSize: { base: "40px", lg: "62px" }, textAlign: "center", lineHeight: 1, color: "#5A189A", children: t }), (0, a.jsxs)(d.g, { borderRadius: "15px", border: "1px solid #5A189A", bg: "#fff", w: { base: "100%", lg: "460px" }, p: { base: 4, lg: 12 }, mt: "70px", spacing: { base: "30px", lg: "40px" }, children: [(0, a.jsxs)(d.g, { spacing: 3, children: [(0, a.jsx)(m.X, { fontSize: { base: "20px", lg: "28px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "FIRESALE" }), (0, a.jsx)(m.X, { fontSize: { base: "32px", lg: "48px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, suppressHydrationWarning: !0, children: "CANCELLED" })] }), (0, a.jsx)(c.E, { src: "hood-cancelled.gif", background: "black", borderRadius: "20px", alt: "NFT", boxSize: { base: "340px" }, objectFit: "cover" })] }), (0, a.jsx)(h, { mt: { base: 12, lg: 24 } })] }) }, X = n(14e3), Z = n(48948), J = n(59917); let Q = (0, i.m)("span", { baseStyle: { fontWeight: 500 } }); var U = () => { let [e, t] = (0, l.useState)(null), [n, i] = (0, l.useState)(null), { address: s } = (0, A.mA)(); (0, l.useEffect)(() => { s && u() }, [s]); let p = async () => { if (!s) { (0, I.Am)("Please connect your wallet"); return } if (!e) { (0, I.Am)("Please enter your Solana address"); return } try { let t = new J.nh(e), n = await J.nh.isOnCurve(t); if (!n) { (0, I.Am)("Please enter a valid Solana address"); return } } catch (e) { (0, I.Am)("Please enter a valid Solana address"); return } let t = await r(e); if (!t) { (0, I.Am)("Error signing message"); return } let n = await y(e, t); n ? (0, I.Am)("Address saved successfully") : (0, I.Am)("Error saving destination"), u() }; async function r(e) { try { let t = new S.Q(window.ethereum).getSigner(); return await t.signMessage(e) } catch (e) { return console.error("Error signing message:", e), null } } async function y(e, t) { try { let n = await fetch("https://cnmffdpgpggereefxapf.supabase.co/functions/v1/airdrop-add", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ address: s, destination: e, signature: t }) }), a = await n.json(); return a.success } catch (e) { return console.error("Error saving destination:", e), !1 } } async function u() { try { let e = await fetch("https://cnmffdpgpggereefxapf.supabase.co/functions/v1/airdrop-check", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ address: s }) }), t = await e.json(); i(t.destination) } catch (e) { console.error("Error checking airdrop address:", e) } } return (0, a.jsxs)(d.g, { children: [(0, a.jsx)(m.X, { fontSize: { base: "40px", lg: "62px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "RAYDIUM" }), (0, a.jsxs)(d.g, { borderRadius: "15px", border: "1px solid #5A189A", bg: "#fff", w: "100%", maxW: { base: "360px", lg: "460px" }, p: { base: 10, lg: 12 }, mt: { base: "40px", lg: "70px" }, spacing: { base: "30px", lg: "40px" }, children: [(0, a.jsxs)(d.g, { spacing: 3, children: [(0, a.jsx)(m.X, { fontSize: { base: "20px", lg: "28px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, children: "RAYDIUM" }), (0, a.jsx)(m.X, { fontSize: { base: "32px", lg: "48px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, suppressHydrationWarning: !0, children: "COMING SOON" })] }), (0, a.jsxs)(d.g, { spacing: 4, children: [(0, a.jsxs)(X.x, { fontSize: { base: "12px", lg: "18px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, fontWeight: 500, children: ["Phase 1: Whitelist your SOL address ", " ", (0, a.jsx)(X.x, { as: "span", fontSize: { base: "9px", lg: "12px" }, fontWeight: 500, children: "(NOW)" })] }), (0, a.jsx)(X.x, { fontSize: { base: "12px", lg: "18px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, fontWeight: 500, children: "Phase 2: Check your eligibility" }), (0, a.jsx)(X.x, { fontSize: { base: "12px", lg: "18px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, fontWeight: 500, children: "Phase 3: Receive MOONY to your saved SOL address" })] }), (0, a.jsx)(c.E, { src: "hood-nft.png", alt: "NFT", boxSize: { base: "160px", lg: "250px" }, objectFit: "cover", borderRadius: "20px" }), (0, a.jsxs)(d.g, { w: "100%", children: [(0, a.jsx)(Z.I, { border: "1px solid #5A189A", borderRadius: "8px", w: "100%", h: { base: "50px", lg: "75px" }, color: "#5A189A", placeholder: "ENTER YOUR SOL WALLET ADDRESS", _placeholder: { color: "#5A189A", fontWeight: 500 }, onChange: e => t(e.target.value), _hover: { border: "1px solid #5A189A" }, outline: "none", _focusVisible: { border: "1px solid #5A189A" } }), (0, a.jsx)(T.z, { w: "100%", h: { base: "50px", lg: "75px" }, color: "#fff", borderRadius: "8px", _hover: { bg: "#5A189A" }, fontSize: { base: "17px", lg: "20px" }, bg: "#5A189A", onClick: p, isDisabled: !s, children: s ? s && n ? "CHANGE ADDRESS" : "SAVE ADDRESS" : "WALLET NOT CONNECTED" }), s && n && (0, a.jsx)(X.x, { fontSize: { base: "12px", lg: "15px" }, color: "#5A189A", textAlign: "center", lineHeight: 1, fontWeight: 500, suppressHydrationWarning: !0, marginTop: "10px", marginBottom: "-20px", children: (0, a.jsx)(Q, { children: n }) })] })] }), (0, a.jsx)(h, { mt: { base: 12, lg: 24 } })] }) }; let Y = (0, i.m)(s.O, { baseStyle: { _selected: { bg: "rgba(255, 255, 255, 0.80)" }, bg: "rgba(255, 255, 255, 0.45)", borderRadius: "8px 8px 0px 0px", fontSize: "22px", fontWeight: 700, color: "#5A189A" } }), V = (0, i.m)(s.O, { baseStyle: { _selected: { bg: "rgba(255, 255, 255, 0.80)" }, bg: "rgba(255, 255, 255, 0.45)", borderRadius: "8px", fontSize: "17px", fontWeight: 700, color: "#5A189A", w: "100%", marginInline: "0px !important", my: "4px", h: "50px" } }); var q = () => { let [e] = (0, l.useState)(!1), [t] = (0, l.useState)(!1), [n] = (0, l.useState)(!1), [i] = (0, p.a)("(min-width: 992px)"); return (0, a.jsxs)(r.m, { variant: "unstyled", alignSelf: "center", my: "120px", defaultIndex: 3, children: [(0, a.jsx)(y.t, { flexDirection: { base: "column", lg: "row" }, mb: { base: "40px", lg: "unset" }, children: i ? (0, a.jsxs)(a.Fragment, { children: [(0, a.jsx)(Y, { color: "gray.600", me: "4px", children: "NFT RAFFLE" }), (0, a.jsx)(Y, { color: "gray.600", mx: "4px", children: "FIRESALE" }), (0, a.jsx)(Y, { color: "gray.600", mx: "4px", children: "PUBLIC SALE" }), (0, a.jsx)(Y, { ms: "4px", children: "RAYDIUM" })] }) : (0, a.jsxs)(a.Fragment, { children: [(0, a.jsx)(V, { color: "gray.600", me: "4px", children: "NFT RAFFLE" }), (0, a.jsx)(V, { color: "gray.600", mx: "4px", children: "FIRESALE" }), (0, a.jsx)(V, { color: "gray.600", mx: "4px", children: "PUBLIC SALE" }), (0, a.jsx)(V, { ms: "4px", children: "RAYDIUM" })] }) }), (0, a.jsxs)(u.n, { bg: "rgba(255, 255, 255, 0.80)", borderRadius: { base: "15px", lg: "0px 15px 15px 15px" }, w: { base: "90%", lg: "1030px" }, py: { base: "60px", lg: "130px" }, children: [(0, a.jsx)(o.x, { children: (0, a.jsx)(P, { status: e }) }), (0, a.jsx)(o.x, { children: (0, a.jsx)(B, { title: "FIRESALE" }) }), (0, a.jsx)(o.x, { children: (0, a.jsx)(G, { status: n }) }), (0, a.jsx)(o.x, { children: (0, a.jsx)(U, {}) })] })] }) } }, 46601: function () { } }]);
